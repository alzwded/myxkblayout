// MY xkb layout
// swap Caps_Lock with Ctrl_L and Ctrl_L with ESC
// 
// based on the layouts referenced below
//
// Complete set of Romanian keyboards as described in the new Romanian standard
// SR 13392:2004 adopted in December 2004 by ASRO, "Asociatia de Standardizare 
// din Romania".
// 
// The default mapping is the RO_US/Programmers layout because of the lack of 
// Romanian hardware keyboards. The primary standard layout is implemented as 
// the "std" variant. If you're determined to get cedillas as in ISO-8859-2  
// (and not commabelow accents as in ISO-8859-16) use the defined variants 
// "cedilla" for the default layout or "std_cedilla" for the standard one. 
// Pre-Vista MS compatible layout included (use the "winkeys" variant).
// 
// Created by Cristian Gafton, <gafton@redhat.com> (C) 2000
// Modified by Marius Andreiana, <mandreiana@yahoo.com> (C) 2001
// Completed by Misu Moldovan, <dumol@gnome.ro> (C) 2001, 2004-2008.
// v 1.4

alphanumeric_keys modifier_keys
xkb_symbols "std" {
    // Primary layout in the new Romanian standard.
    // Implemented here as a variant because of the lack of hardware 
    // Romanian keyboards and because of the predilection of Romanian
    // X users towards the secondary layout from the new standard.


    name[Group1]="Romanian (standard) (myxkblayout)";

    // Alphanumeric section

    key <AD01> {	[	  q,	Q 		]	};
    key <AD02> {	[	  w,	W		]	};
    key <AD04> {	[	  r,	R		]	};
    key <AD05> {	[	  t,	T		]	};
    key <AD06> {	[	  y,	Y		]	};
    key <AD07> {	[	  u,	U		]	};
    key <AD08> {	[	  i,	I		]	};
    key <AD09> {	[	  o,	O		]	};

    key <AC01> {	[	  a,	A 		]	};
    key <AC04> {	[	  f,	F		]	};
    key <AC05> {	[	  g,	G		]	};
    key <AC06> {	[	  h,	H		]	};
    key <AC07> {	[	  j,	J		]	};
    key <AC08> {	[	  k,	K		]	};

    key <AB01> {	[	  z,	Z 		]	};
    key <AB02> {	[	  x,	X		]	};
    key <AB04> {	[	  v,	V		]	};
    key <AB05> {	[	  b,	B		]	};
    key <AB06> {	[	  n,	N		]	};
    key <AB07> {	[	  m,	M		]	};
    key <AB10> {	[     slash,	question	]	};

    // End alphanumeric section

    key <TLDE> { [ doublelowquotemark, rightdoublequotemark, grave, asciitilde ] };
    key <AE01> { [ 1,                 exclam,  dead_tilde		  ] };
    key <AE02> { [ 2,                     at,  dead_caron		  ] };
    key <AE03> { [ 3,             numbersign,  dead_circumflex 	  	  ] };
    key <AE04> { [ 4,                 dollar,  dead_breve		  ] };
    key <AE05> { [ 5,                percent,  dead_abovering		  ] };
    key <AE06> { [ 6,            asciicircum,  dead_ogonek		  ] };
    key <AE07> { [ 7,              ampersand,  dead_grave		  ] };
    key <AE08> { [ 8,               asterisk,  dead_abovedot		  ] };
    key <AE09> { [ 9,              parenleft,  dead_acute		  ] };
    key <AE10> { [ 0,             parenright,  dead_doubleacute	  	  ] };
    key <AE11> { [ minus,         underscore,  dead_diaeresis,     endash ] };
    key <AE12> { [ equal,               plus,  dead_cedilla,    plusminus ] };
    key <AD03> { [ e,                      E,  EuroSign  	          ] };
    key <AD10> { [ p,                      P,  section 			  ] };
    key <AD11> { [ abreve, 	      Abreve,  bracketleft,     braceleft ] };
    key <AD12> { [ icircumflex,  Icircumflex,  bracketright,   braceright ] };
    key <BKSL> { [ acircumflex,  Acircumflex,  backslash,             bar ] };
    key <AC02> { [ s, 			   S,  ssharp			  ] };
    key <AC03> { [ d,                      D,  dstroke,  	  Dstroke ] };
    key <AC09> { [ l,                      L,  lstroke,  	  Lstroke ] };
    key <AC10> { [ 0x1000219,	   0x1000218,  semicolon, 	    colon ] };
    key <AC11> { [ 0x100021b,	   0x100021a,  apostrophe, 	 quotedbl ] };
    key <LSGT> { [ backslash,            bar                              ] };
    key <AB03> { [ c,                      C,  copyright 	       	  ] };
    key <AB08> { [ comma, 	   semicolon,  less, 	    guillemotleft ] };
    key <AB09> { [ period,             colon,  greater,    guillemotright ] };

    key <KPDL> { [ KP_Delete,   KP_Separator ] };

    include "level3(ralt_switch)"

    // * make caps_lock ctrl_l
    key <AA00>	{  [ Control_L ] };
    // * make ctrl_l escape
    key <AC00> { [ Escape ] };


    // remaining keys

    include "srvr_ctrl(fkey2vt)"
    include "pc(editing)"
    include "keypad(x11)"
    key <BKSP> {	[ BackSpace, BackSpace	]	};
    key <NMLK> {	[ Num_Lock 	]	};

    key <LFSH> {	[ Shift_L	]	};

    key  <TAB> {	[ Tab,	ISO_Left_Tab	]	};
    key <RTRN> {	[ Return	]	};
    key <ESC>  {	[ Escape			]	};
    key <SPCE> {	[ 	 space			]	};

    key <LWIN> {	[ Super_L			]	};

    key <RTSH> {	[ Shift_R	]	};
    key <RCTL> {	[ Control_R	]	};

    key <RWIN> {	[ Super_R			]	};

    key <MENU> {	[ Menu			]	};



    // modifiers

    modifier_map Shift  { Shift_L, Shift_R };
    // * make caps_lock ctrl
    modifier_map Control{ <AA00>, Control_R };
    modifier_map Mod2   { Num_Lock };
    modifier_map Mod4   { Super_L, Super_R };
    modifier_map Lock   { VoidSymbol, ISO_Lock };


    //  Fake keys for virtual<->real modifiers mapping 
    key <LVL3> {	[ ISO_Level3_Shift	]	};
    key <MDSW> {	[ Mode_switch 		]	};
    modifier_map Mod5   { <LVL3>, <MDSW> };

    key <ALT>  {	[ NoSymbol, Alt_L	]	};
    include "altwin(meta_alt)"

    key <META> {	[ NoSymbol, Meta_L	]	};
    modifier_map Mod1   { <META> };

    key <SUPR> {	[ NoSymbol, Super_L	]	};
    modifier_map Mod4   { <SUPR> };

    key <HYPR> {	[ NoSymbol, Hyper_L	]	};
    modifier_map Mod4   { <HYPR> };

    key <OUTP> { [ XF86Display ] };
    key <KITG> { [ XF86KbdLightOnOff ] };
    key <KIDN> { [ XF86KbdBrightnessDown ] };
    key <KIUP> { [ XF86KbdBrightnessUp ] };

};

partial alphanumeric_keys
xkb_symbols "std_cedilla" {
    // Variant of the "std" layout with cedillas.
    // Implements S and T with cedillas as in ISO-8859-2.
    // Included for compatibility reasons.

    include "myxkblayout(std)"

    name[Group1]="Romanian (standard cedilla) (myxkblayout)";

    key <AC10> { [ scedilla, 	    Scedilla ] };
    key <AC11> { [ tcedilla, 	    Tcedilla ] };
};
